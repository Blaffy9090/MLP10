@page "/brons"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using MLP10.Data
@implements IAsyncDisposable
@inject IDbContextFactory<MLP10.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Бронь</PageTitle>

<h1>Бронь</h1>

@if(op == 1)
{
    <p>
         <a href="apartaments">Возврат к списку номеров</a>
    </p>
}
else
{
    <p>
        <a href="gosts">Возврат к списку гостей</a>
    </p>
}

<p>
    <a href="@($"brons/create?id={id}&op={op}")">Добавить</a> 
</p>

<QuickGrid Class="table" Items="context.Arendas.Include(d=>d.apartament).Include(d=>d.gost).Where(d=>op==1?d.ApartamentId==id:d.GostId==id)">
    <PropertyColumn Title="Тип комнаты" Property="bron => bron.apartament.ApartamentType" />
    <PropertyColumn Title="Имя"  Property="bron => bron.gost.FirstName" />
    <PropertyColumn Title="Дата заселения" Property="bron => bron.DateIn" />
    <PropertyColumn Title="Дата выселения" Property="bron => bron.DateOut" />
    <PropertyColumn Title="стоимость" Property="bron => bron.Cost" />

    <TemplateColumn Context="bron">
        <a href="@($"brons/edit?bronid={bron.ArendaId}&op={op}")">Редактировать</a> |
        <a href="@($"brons/details?bronid={bron.ArendaId}&op={op}")">Просмотр</a> |
        <a href="@($"brons/delete?bronid={bron.ArendaId}&op={op}")">Удалить</a>
    </TemplateColumn>
</QuickGrid>

@code {
    [SupplyParameterFromQuery]
    private int? id { get; set; }

    [SupplyParameterFromQuery]
    private int? op { get; set; }

    private ApplicationDbContext context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
        if(id==null || op== null)
        {
            NavigationManager.NavigateTo("not found");
        }
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
