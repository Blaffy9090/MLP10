@page "/apartaments/create"
@using Microsoft.EntityFrameworkCore
@using MLP10.Data
@inject IDbContextFactory<MLP10.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Добавить</PageTitle>

<h1>Добавить</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Apartament" OnValidSubmit="AddApartament" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="apartamentnumber" class="form-label">Номер комнаты:</label> 
                <InputNumber id="apartamentnumber" @bind-Value="Apartament.ApartamentNumber" class="form-control" /> 
                <ValidationMessage For="() => Apartament.ApartamentNumber" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="apartamenttype" class="form-label">Тип номера:</label> 
                <InputText id="apartamenttype" @bind-Value="Apartament.ApartamentType" class="form-control" /> 
                <ValidationMessage For="() => Apartament.ApartamentType" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="cost" class="form-label">Стоимость:</label> 
                <InputNumber id="cost" @bind-Value="Apartament.Cost" class="form-control" /> 
                <ValidationMessage For="() => Apartament.Cost" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Добавить</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/apartaments">Вернуться к списку номера</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Apartament Apartament { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddApartament()
    {
        using var context = DbFactory.CreateDbContext();
        context.Apartaments.Add(Apartament);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/apartaments");
    }
}
