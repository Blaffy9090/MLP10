@page "/gosts/details"
@using Microsoft.EntityFrameworkCore
@using MLP10.Data
@inject IDbContextFactory<MLP10.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>Gost</h2>
    <hr />
    @if (gost is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">FirstName</dt>
            <dd class="col-sm-10">@gost.FirstName</dd>
            <dt class="col-sm-2">LastName</dt>
            <dd class="col-sm-10">@gost.LastName</dd>
            <dt class="col-sm-2">Birht</dt>
            <dd class="col-sm-10">@gost.Birht</dd>
            <dt class="col-sm-2">Pasport</dt>
            <dd class="col-sm-10">@gost.Pasport</dd>
            <dt class="col-sm-2">Phone</dt>
            <dd class="col-sm-10">@gost.Phone</dd>
        </dl>
        <div>
            <a href="@($"/gosts/edit?gostid={gost.GostId}")">Edit</a> |
            <a href="@($"/gosts")">Back to List</a>
        </div>
    }
</div>

@code {
    private Gost? gost;

    [SupplyParameterFromQuery]
    private int GostId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        gost = await context.Gosts.FirstOrDefaultAsync(m => m.GostId == GostId);

        if (gost is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
